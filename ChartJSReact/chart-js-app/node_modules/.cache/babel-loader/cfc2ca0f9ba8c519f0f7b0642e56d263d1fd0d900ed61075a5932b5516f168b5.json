{"ast":null,"code":"var _jsxFileName = \"/Users/srinidhisasidharan/React/ChartJSReact/chart-js-app/src/LineChart.js\";\nimport React, { useEffect, useState } from \"react\";\nimport Chart from \"chart.js/auto\";\nimport { Line } from \"react-chartjs-2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst [chartData, setChartData] = useState({\n  labels: [],\n  datasets: [{\n    label: \"DS1\",\n    backgroundColor: \"rgb(255, 99, 132)\",\n    borderColor: \"rgb(255, 99, 132)\",\n    data: [0],\n    lineTension: 0.5\n  }]\n});\nuseEffect(() => {\n  const interval = setInterval(() => {\n    var now = new Date();\n    now = now.getHours() + \":\" + now.getMinutes() + \":\" + now.getSeconds();\n    var value = Math.floor(Math.random() * 1000);\n    setChartData(prevData => {\n      const newLabels = [...prevData.labels, now];\n      const newData = [...prevData.datasets[0].data, value];\n      const windowSize = 10;\n      if (newLabels.length > windowSize) {\n        newLabels.shift();\n        newData.shift();\n      }\n      return {\n        labels: newLabels,\n        datasets: [{\n          ...prevData.datasets[0],\n          data: newData\n        }]\n      };\n    });\n  }, 1000);\n});\nconst LineChart = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Line, {\n      data: chartData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n_c = LineChart;\nexport default LineChart;\nvar _c;\n$RefreshReg$(_c, \"LineChart\");","map":{"version":3,"names":["React","useEffect","useState","Chart","Line","jsxDEV","_jsxDEV","chartData","setChartData","labels","datasets","label","backgroundColor","borderColor","data","lineTension","interval","setInterval","now","Date","getHours","getMinutes","getSeconds","value","Math","floor","random","prevData","newLabels","newData","windowSize","length","shift","LineChart","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/srinidhisasidharan/React/ChartJSReact/chart-js-app/src/LineChart.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\"\nimport Chart from \"chart.js/auto\"\n\nimport {Line} from \"react-chartjs-2\"\n\n    const [chartData, setChartData] = useState({\n        labels: [],\n        datasets:[{\n                label: \"DS1\",\n                backgroundColor: \"rgb(255, 99, 132)\",\n                borderColor: \"rgb(255, 99, 132)\",\n                data: [0],\n                lineTension:0.5,\n            },\n        ],\n    })\n\n    useEffect(()=>{\n        const interval = setInterval(()=>{\n        var now = new Date();\n        now = now.getHours()+ \":\" +now.getMinutes()+\":\"+now.getSeconds();\n        var value = Math.floor(Math.random()*1000);\n\n        setChartData(prevData=>{\n            const newLabels = [...prevData.labels, now];\n            const newData = [...prevData.datasets[0].data, value];\n\n            const windowSize = 10;\n            if (newLabels.length > windowSize) {\n            newLabels.shift();\n            newData.shift();\n            }\n\n            return{\n                labels: newLabels,\n                datasets: [\n                    {\n                        ...prevData.datasets[0],\n                data: newData,\n                    }\n                ]\n            }\n            })\n        },1000)\n        \n    })\n\nconst LineChart = ()=>{\n    return(\n        <div>\n            <Line data = {chartData}/>\n        </div>\n    )\n}\n\nexport default LineChart;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,eAAe;AAEjC,SAAQC,IAAI,QAAO,iBAAiB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC;EACvCO,MAAM,EAAE,EAAE;EACVC,QAAQ,EAAC,CAAC;IACFC,KAAK,EAAE,KAAK;IACZC,eAAe,EAAE,mBAAmB;IACpCC,WAAW,EAAE,mBAAmB;IAChCC,IAAI,EAAE,CAAC,CAAC,CAAC;IACTC,WAAW,EAAC;EAChB,CAAC;AAET,CAAC,CAAC;AAEFd,SAAS,CAAC,MAAI;EACV,MAAMe,QAAQ,GAAGC,WAAW,CAAC,MAAI;IACjC,IAAIC,GAAG,GAAG,IAAIC,IAAI,CAAC,CAAC;IACpBD,GAAG,GAAGA,GAAG,CAACE,QAAQ,CAAC,CAAC,GAAE,GAAG,GAAEF,GAAG,CAACG,UAAU,CAAC,CAAC,GAAC,GAAG,GAACH,GAAG,CAACI,UAAU,CAAC,CAAC;IAChE,IAAIC,KAAK,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAC,IAAI,CAAC;IAE1ClB,YAAY,CAACmB,QAAQ,IAAE;MACnB,MAAMC,SAAS,GAAG,CAAC,GAAGD,QAAQ,CAAClB,MAAM,EAAES,GAAG,CAAC;MAC3C,MAAMW,OAAO,GAAG,CAAC,GAAGF,QAAQ,CAACjB,QAAQ,CAAC,CAAC,CAAC,CAACI,IAAI,EAAES,KAAK,CAAC;MAErD,MAAMO,UAAU,GAAG,EAAE;MACrB,IAAIF,SAAS,CAACG,MAAM,GAAGD,UAAU,EAAE;QACnCF,SAAS,CAACI,KAAK,CAAC,CAAC;QACjBH,OAAO,CAACG,KAAK,CAAC,CAAC;MACf;MAEA,OAAM;QACFvB,MAAM,EAAEmB,SAAS;QACjBlB,QAAQ,EAAE,CACN;UACI,GAAGiB,QAAQ,CAACjB,QAAQ,CAAC,CAAC,CAAC;UAC/BI,IAAI,EAAEe;QACF,CAAC;MAET,CAAC;IACD,CAAC,CAAC;EACN,CAAC,EAAC,IAAI,CAAC;AAEX,CAAC,CAAC;AAEN,MAAMI,SAAS,GAAGA,CAAA,KAAI;EAClB,oBACI3B,OAAA;IAAA4B,QAAA,eACI5B,OAAA,CAACF,IAAI;MAACU,IAAI,EAAIP;IAAU;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzB,CAAC;AAEd,CAAC;AAAAC,EAAA,GANKN,SAAS;AAQf,eAAeA,SAAS;AAAC,IAAAM,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}