{"ast":null,"code":"var _jsxFileName = \"/Users/srinidhisasidharan/React/ChartJSReact/chart-js-app/src/LineChart.js\";\nimport React from \"react\";\nimport Chart from \"chart.js/auto\";\nimport { Line } from \"react-chartjs-2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst labels = [0];\nconst data = {\n  labels: labels,\n  datasets: [{\n    label: \"DS1\",\n    backgroundColor: \"rgb(255, 99, 132)\",\n    borderColor: \"rgb(255, 99, 132)\",\n    data: [0],\n    lineTensiion: 0.5\n  }]\n};\nwindow.setInterval(myCallback, 1);\nfunction myCallback() {\n  var now = new Date();\n  now = now.getHours() + \":\" + now.getMinutes() + \":\" + now.getSeconds();\n  data.labels.push(now);\n}\nconst LineChart = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Line, {\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n_c = LineChart;\nexport default LineChart;\nvar _c;\n$RefreshReg$(_c, \"LineChart\");","map":{"version":3,"names":["React","Chart","Line","jsxDEV","_jsxDEV","labels","data","datasets","label","backgroundColor","borderColor","lineTensiion","window","setInterval","myCallback","now","Date","getHours","getMinutes","getSeconds","push","LineChart","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/srinidhisasidharan/React/ChartJSReact/chart-js-app/src/LineChart.js"],"sourcesContent":["import React from \"react\"\nimport Chart from \"chart.js/auto\"\n\nimport {Line} from \"react-chartjs-2\"\n\nconst labels = [0]\nconst data = {\n    labels: labels,\n    datasets:[\n        {\n            label: \"DS1\",\n            backgroundColor: \"rgb(255, 99, 132)\",\n            borderColor: \"rgb(255, 99, 132)\",\n            data: [0],\n            lineTensiion:0.5,\n        },\n    ],\n};\n\nwindow.setInterval(myCallback,1);\n\nfunction myCallback(){\n    var now = new Date();\n    now = now.getHours()+ \":\" +now.getMinutes()+\":\"+now.getSeconds();\n    data.labels.push(now);\n}\nconst LineChart = ()=>{\n    return(\n        <div>\n            <Line data = {data}/>\n        </div>\n    )\n}\n\nexport default LineChart;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,eAAe;AAEjC,SAAQC,IAAI,QAAO,iBAAiB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,MAAM,GAAG,CAAC,CAAC,CAAC;AAClB,MAAMC,IAAI,GAAG;EACTD,MAAM,EAAEA,MAAM;EACdE,QAAQ,EAAC,CACL;IACIC,KAAK,EAAE,KAAK;IACZC,eAAe,EAAE,mBAAmB;IACpCC,WAAW,EAAE,mBAAmB;IAChCJ,IAAI,EAAE,CAAC,CAAC,CAAC;IACTK,YAAY,EAAC;EACjB,CAAC;AAET,CAAC;AAEDC,MAAM,CAACC,WAAW,CAACC,UAAU,EAAC,CAAC,CAAC;AAEhC,SAASA,UAAUA,CAAA,EAAE;EACjB,IAAIC,GAAG,GAAG,IAAIC,IAAI,CAAC,CAAC;EACpBD,GAAG,GAAGA,GAAG,CAACE,QAAQ,CAAC,CAAC,GAAE,GAAG,GAAEF,GAAG,CAACG,UAAU,CAAC,CAAC,GAAC,GAAG,GAACH,GAAG,CAACI,UAAU,CAAC,CAAC;EAChEb,IAAI,CAACD,MAAM,CAACe,IAAI,CAACL,GAAG,CAAC;AACzB;AACA,MAAMM,SAAS,GAAGA,CAAA,KAAI;EAClB,oBACIjB,OAAA;IAAAkB,QAAA,eACIlB,OAAA,CAACF,IAAI;MAACI,IAAI,EAAIA;IAAK;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpB,CAAC;AAEd,CAAC;AAAAC,EAAA,GANKN,SAAS;AAQf,eAAeA,SAAS;AAAC,IAAAM,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}