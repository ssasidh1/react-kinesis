{"ast":null,"code":"var _jsxFileName = \"/Users/srinidhisasidharan/React/kinesisData/kinesis-store/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport './App.css';\nimport RealTimeChart from './RealTimeChart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  useEffect(() => {\n    if (window.Worker) {\n      // Use a leading slash to reference a worker in the public folder\n      const dataGenWorker = new Worker('/dataGeneratorWorker.js');\n\n      // Listen for messages from the worker (for logging or UI feedback)\n      dataGenWorker.onmessage = function (event) {\n        const {\n          type,\n          record,\n          response,\n          error\n        } = event.data;\n        if (type === 'recordSent') {\n          console.log('Record generated and sent from worker:', record, response);\n        } else if (type === 'error') {\n          console.error('Worker encountered an error:', error);\n        }\n      };\n\n      // Optionally, you can terminate the worker when needed:\n      // return () => dataGenWorker.terminate();\n    } else {\n      console.error('Web Workers are not supported in this browser.');\n    }\n  }, []); // empty dependency array ensures this runs only once\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(RealTimeChart, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","RealTimeChart","jsxDEV","_jsxDEV","App","_s","window","Worker","dataGenWorker","onmessage","event","type","record","response","error","data","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/srinidhisasidharan/React/kinesisData/kinesis-store/src/App.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport './App.css';\nimport RealTimeChart from './RealTimeChart';\n\nfunction App() {\n  useEffect(() => {\n    if (window.Worker) {\n      // Use a leading slash to reference a worker in the public folder\n      const dataGenWorker = new Worker('/dataGeneratorWorker.js');\n    \n      // Listen for messages from the worker (for logging or UI feedback)\n      dataGenWorker.onmessage = function(event) {\n        const { type, record, response, error } = event.data;\n        if (type === 'recordSent') {\n          console.log('Record generated and sent from worker:', record, response);\n        } else if (type === 'error') {\n          console.error('Worker encountered an error:', error);\n        }\n      };\n    \n      // Optionally, you can terminate the worker when needed:\n      // return () => dataGenWorker.terminate();\n    } else {\n      console.error('Web Workers are not supported in this browser.');\n    }\n  }, []); // empty dependency array ensures this runs only once\n\n  return (\n    <div className=\"App\">\n      <RealTimeChart />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAO,WAAW;AAClB,OAAOC,aAAa,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACbL,SAAS,CAAC,MAAM;IACd,IAAIM,MAAM,CAACC,MAAM,EAAE;MACjB;MACA,MAAMC,aAAa,GAAG,IAAID,MAAM,CAAC,yBAAyB,CAAC;;MAE3D;MACAC,aAAa,CAACC,SAAS,GAAG,UAASC,KAAK,EAAE;QACxC,MAAM;UAAEC,IAAI;UAAEC,MAAM;UAAEC,QAAQ;UAAEC;QAAM,CAAC,GAAGJ,KAAK,CAACK,IAAI;QACpD,IAAIJ,IAAI,KAAK,YAAY,EAAE;UACzBK,OAAO,CAACC,GAAG,CAAC,wCAAwC,EAAEL,MAAM,EAAEC,QAAQ,CAAC;QACzE,CAAC,MAAM,IAAIF,IAAI,KAAK,OAAO,EAAE;UAC3BK,OAAO,CAACF,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;QACtD;MACF,CAAC;;MAED;MACA;IACF,CAAC,MAAM;MACLE,OAAO,CAACF,KAAK,CAAC,gDAAgD,CAAC;IACjE;EACF,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACEX,OAAA;IAAKe,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBhB,OAAA,CAACF,aAAa;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACd,CAAC;AAEV;AAAClB,EAAA,CA5BQD,GAAG;AAAAoB,EAAA,GAAHpB,GAAG;AA8BZ,eAAeA,GAAG;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}